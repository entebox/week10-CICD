trigger:
- main

resources:
- repo: self

variables:
  imageRepo: 'weighttracker'
  tag: '$(Build.BuildId)'
  acrurl: 'week10acr.azurecr.io' 
  imagePullSecret: 'week10acr10c1-auth'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: Week10Pool
      demands:
      - agent.name -equals w10Agent
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        containerRegistry: 'week10acr'
        repository: '$(imageRepo)'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        tags: '$(tag)'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/kubernetes'
        artifact: 'manifests'
        publishLocation: 'pipeline'
- stage: DeployToStaging
  displayName: Deploy to staging
  dependsOn: Build

  jobs:
    - deployment: Deploy
      displayName: Deploy to Staging
      variables:
      - group: staging
      environment: 'w10aksclusterstagingenv.default'
      pool:
        name: Week10Pool
        demands:
        - agent.name -equals w10Agent
      strategy:
       runOnce:
         deploy:        
            steps:
            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'current'
                artifactName: 'manifests'
                targetPath: $(Pipeline.Workspace)/manifests
            - task: KubernetesManifest@0
              inputs:
                action: 'createSecret'
                kubernetesServiceConnection: 'w10aksclusterstagingenv-w10aksclusterstaging-default-1637437271428'
                namespace: 'default'
                secretType: 'generic'
                secretName: 'secret'
                secretArguments: '--from-literal=COOKIE_ENCRYPT_PWD=$(COOKIE_ENCRYPT_PWD)  --from-literal=PORT=$(PORT) --from-literal=NODE_ENV=$(NODE_ENV) --from-literal=HOST_URL=$(HOST_URL) --from-literal=OKTA_CLIENT_ID=$(OKTA_CLIENT_ID) --from-literal=OKTA_CLIENT_SECRET=$(OKTA_CLIENT_SECRET) --from-literal=OKTA_ORG_URL=$(OKTA_ORG_URL)  --from-literal=PGHOST=$(PGHOST) --from-literal=PGUSERNAME=$(PGUSERNAME) --from-literal=PGDATABASE=$(PGDATABASE) --from-literal=PGPASSWORD=$(PGPASSWORD)  --from-literal=PGPORT=$(PGPORT)'
            - task: KubernetesManifest@0
              inputs:
                action: 'deploy'
                kubernetesServiceConnection: 'w10aksclusterstagingenv-w10aksclusterstaging-default-1637437271428'
                namespace: 'default'
                manifests: |
                  $(Pipeline.Workspace)/manifests/staging/deployment.yaml
                  $(Pipeline.Workspace)/manifests/staging/service.yaml
                  $(Pipeline.Workspace)/manifests/staging/ingress.yaml
                containers: '$(acrurl)/$(imageRepo):$(tag)'
                imagePullSecrets: '$(imagePullSecret)'
            
            - task: Kubernetes@1
              inputs:
                connectionType: 'Kubernetes Service Connection'
                kubernetesServiceEndpoint: 'w10aksclusterstagingenv-w10aksclusterstaging-default-1637437271428'
                namespace: 'default'
                command: 'apply'
                useConfigurationFile: true
                configuration: '$(Pipeline.Workspace)/manifests/staging/deployment.yaml'
                secretType: 'dockerRegistry'
                containerRegistryType: 'Container Registry'
                dockerRegistryEndpoint: 'week10acr'
                secretName: 'secret'
- stage: DeployToProduction
  displayName: Deploy to production
  dependsOn: DeployToStaging

  jobs:
    - deployment: Deploy
      displayName: Deploy to Production
      variables:
      - group: production
      environment: 'w10aksclusterproductionenv.default'
      pool:
        name: Week10Pool
        demands:
        - agent.name -equals w10Agent
      strategy:
       runOnce:
         deploy:        
            steps:
            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'current'
                artifactName: 'manifests'
                targetPath: $(Pipeline.Workspace)/manifests
            - task: KubernetesManifest@0
              inputs:
                action: 'createSecret'
                kubernetesServiceConnection: 'w10aksclusterproduction-w10aksclusterproduction-default-1637437308616'
                namespace: 'default'
                secretType: 'generic'
                secretName: 'secret'
                secretArguments: '--from-literal=COOKIE_ENCRYPT_PWD=$(COOKIE_ENCRYPT_PWD)  --from-literal=PORT=$(PORT) --from-literal=NODE_ENV=$(NODE_ENV) --from-literal=HOST_URL=$(HOST_URL) --from-literal=OKTA_CLIENT_ID=$(OKTA_CLIENT_ID) --from-literal=OKTA_CLIENT_SECRET=$(OKTA_CLIENT_SECRET) --from-literal=OKTA_ORG_URL=$(OKTA_ORG_URL)  --from-literal=PGHOST=$(PGHOST) --from-literal=PGUSERNAME=$(PGUSERNAME) --from-literal=PGDATABASE=$(PGDATABASE) --from-literal=PGPASSWORD=$(PGPASSWORD)  --from-literal=PGPORT=$(PGPORT)'
            - task: KubernetesManifest@0
              inputs:
                action: 'deploy'
                kubernetesServiceConnection: 'w10aksclusterproduction-w10aksclusterproduction-default-1637437308616'
                namespace: 'default'
                manifests: |
                  $(Pipeline.Workspace)/manifests/production/deployment.yaml
                  $(Pipeline.Workspace)/manifests/production/service.yaml
                  $(Pipeline.Workspace)/manifests/production/ingress.yaml
                containers: '$(acrurl)/$(imageRepo):$(tag)'
                imagePullSecrets: '$(imagePullSecret)'
            
            - task: Kubernetes@1
              inputs:
                connectionType: 'Kubernetes Service Connection'
                kubernetesServiceEndpoint: 'w10aksclusterproduction-w10aksclusterproduction-default-1637437308616'
                namespace: 'default'
                command: 'apply'
                useConfigurationFile: true
                configuration: '$(Pipeline.Workspace)/manifests/production/deployment.yaml'
                secretType: 'dockerRegistry'
                containerRegistryType: 'Container Registry'
                dockerRegistryEndpoint: 'week10acr'
                secretName: 'secret'
                
               